This  provides a portable way of using operating system dependent functionality.
If you just want to read or write a  see open(), if you want to manipulate paths,
see the os. , and if you want to read all the lines in all the files on the command line see the fileinput .
For creating temporary files and directories see the tempfile , and for high-level  and directory handling see the shutil .
Notes on the availability of these functions:
The design of all built-in operating system dependent modules of Python is such that as long as the same functionality
is available, it uses the same interface; for example, the function os.stat() returns stat information about  in
the same format (which happens to have originated with the POSIX interface). Extensions peculiar to a particular operating
system are also available through the os , but using them is of course a threat to portability.
glob.glob(pathname, *, root_dir=None, dir_fd=None, recursive=False, include_hidden=False)
Return a possibly empty list of  names that match pathname, which must be a string containing a  specification.
pathname can be either absolute (like /usr/src/Python-1.5/Makefile) or relative (like ../../Tools/*/*.gif),
and can contain shell-style wildcards. Broken symlinks are included in the results (as in the shell).
Whether or not the results are sorted depends on the  system. If a  that satisfies conditions is removed
or added during the call of this function, whether a  name for that  will be included is unspecified.
